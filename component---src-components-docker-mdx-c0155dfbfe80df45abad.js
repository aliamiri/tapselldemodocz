(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{ZjdV:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return i})),a.d(t,"default",(function(){return l}));var n=a("Fcif"),r=a("+I+c"),c=(a("mXGw"),a("/FXl")),o=a("TjRS"),i=(a("aD51"),{});void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/Docker.mdx"}});var p={_frontmatter:i},b=o.a;function l(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)(b,Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"dockers"},"Dockers"),Object(c.b)("p",null,"I have a sigle docker-compose file which will deploy all the containers that are used in this project. "),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Kafdrop, Kafka, Zookeeper")," : I just did a little modification on an avaible docker compose for these three.")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"tapsellcassandra")," : Used official cassandra image and add a bash script to create my keyspace.")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"tapsellbigdatahandler , generator")," : Used alpine image and add respected jar files of my project.")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"nginx")," : just a generic nginx container to act as a reverse proxy."))))}void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/Docker.mdx"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-docker-mdx-c0155dfbfe80df45abad.js.map